{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\Youtube\\\\CursodeReactParaCompletosIniciantes\\\\ReactApp\\\\my-app\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport Tasks from \"./Components/Tasks\";\nimport './App.css';\nimport AddTask from \"./Components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: \"1\",\n    title: \"Item 1\",\n    completed: false\n  }, {\n    id: \"2\",\n    title: \"Item 2\",\n    completed: true\n  }]);\n\n  const handdleAddTaskClick = taskId => {\n    const newTasks = tasks.map(task => {\n      if (task.id == taskId) return { ...task,\n        completed: !task.completed\n      };\n      return task;\n    });\n    setTasks(newTasks);\n  };\n\n  const handleTaskAddition = taskTitle => {\n    const newTasks = [...tasks, {\n      title: taskTitle,\n      id: uuidv4(),\n      completed: false\n    }];\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(AddTask, {\n        handleTaskAddition: handleTaskAddition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n        tasks: tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(App, \"r/4TSy5QgWixNwt3+JjUs24kVFo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Cursos/Youtube/CursodeReactParaCompletosIniciantes/ReactApp/my-app/src/App.jsx"],"names":["React","useState","v4","uuidv4","Tasks","AddTask","App","tasks","setTasks","id","title","completed","handdleAddTaskClick","taskId","newTasks","map","task","handleTaskAddition","taskTitle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CACjC;AACEQ,IAAAA,EAAE,EAAE,GADN;AAEAC,IAAAA,KAAK,EAAE,QAFP;AAGAC,IAAAA,SAAS,EAAE;AAHX,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE,QAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GANiC,CAAD,CAAlC;;AAcC,QAAMC,mBAAmB,GAAEC,MAAD,IAAU;AAClC,UAAMC,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAS;AAClC,UAAGA,IAAI,CAACP,EAAL,IAAWI,MAAd,EAAsB,OAAM,EAAC,GAAIG,IAAL;AAAUL,QAAAA,SAAS,EAAE,CAACK,IAAI,CAACL;AAA3B,OAAN;AAEtB,aAAOK,IAAP;AACD,KAJgB,CAAjB;AAMAR,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GARD;;AAUD,QAAMG,kBAAkB,GAAIC,SAAD,IAAa;AACtC,UAAMJ,QAAQ,GAAG,CAAC,GAAIP,KAAL,EAAY;AAC3BG,MAAAA,KAAK,EAAEQ,SADoB;AAE3BT,MAAAA,EAAE,EAAEN,MAAM,EAFiB;AAG3BQ,MAAAA,SAAS,EAAE;AAHgB,KAAZ,CAAjB;AAMCH,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACF,GARD;;AAUA,sBACO;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,kBAAkB,EAAIG;AAA/B;AAAA;AAAA;AAAA;AAAA,cADF,eAEG,QAAC,KAAD;AAAO,QAAA,KAAK,EAAEV;AAAd;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADP;AASA,CA5CD;;GAAMD,G;;KAAAA,G;AA8CN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {v4 as uuidv4} from 'uuid'\nimport Tasks from \"./Components/Tasks\";\nimport './App.css';\nimport AddTask from \"./Components/AddTask\";\n\n\nconst App = () => {\n const [tasks, setTasks] = useState([\n   {\n     id: \"1\",\n   title: \"Item 1\",\n   completed: false,\n   },\n   {\n     id: \"2\",\n     title: \"Item 2\",\n     completed: true,\n   },\n   \n ]);\n\n  const handdleAddTaskClick=(taskId)=>{\n    const newTasks = tasks.map((task) =>{\n      if(task.id == taskId) return{... task,completed: !task.completed}\n\n      return task;\n    });\n\n    setTasks(newTasks)\n  }\n\n const handleTaskAddition = (taskTitle)=>{\n   const newTasks = [... tasks, {\n     title: taskTitle,\n     id: uuidv4(),\n     completed: false,\n   },\n  ];\n    setTasks(newTasks);\n }\n\n return (\n        <>\n          <div className=\"container\">\n            <AddTask handleTaskAddition = {handleTaskAddition}/>\n             <Tasks tasks={tasks}/>\n             </div>\n        </>\n  );\n  \n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}