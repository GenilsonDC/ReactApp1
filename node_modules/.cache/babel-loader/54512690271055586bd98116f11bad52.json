{"ast":null,"code":"var _jsxFileName = \"D:\\\\Cursos\\\\Youtube\\\\CursodeReactParaCompletosIniciantes\\\\ReactApp\\\\my-app\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport './App.css';\nimport Tasks from \"./Components/Tasks\";\nimport AddTask from \"./Components/AddTask\";\nimport TaskInfo from \"./Components/TaskInfo\";\nimport Header from \"./Components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: \"1\",\n    title: \"Item 1\",\n    completed: false\n  }, {\n    id: \"2\",\n    title: \"Item 2\",\n    completed: true\n  }]);\n\n  const handleTaskClick = taskId => {\n    const newTasks = tasks.map(task => {\n      if (task.id == taskId) return { ...task,\n        completed: !task.completed\n      };\n      return task;\n    });\n    setTasks(newTasks);\n  };\n\n  const handleTaskAddition = taskTitle => {\n    const newTasks = [...tasks, {\n      title: taskTitle,\n      id: uuidv4(),\n      completed: false\n    }];\n    setTasks(newTasks);\n  };\n\n  const handTaskDelet = taskId => {\n    const newTasks = tasks.filter(task => task.id != taskId);\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(AddTask, {\n            handleTaskAddition: handleTaskAddition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            handleTaskClick: handleTaskClick,\n            handTaskDelet: handTaskDelet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/:taskTitle\",\n      exact: true,\n      component: TaskInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"r/4TSy5QgWixNwt3+JjUs24kVFo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Cursos/Youtube/CursodeReactParaCompletosIniciantes/ReactApp/my-app/src/App.jsx"],"names":["React","useState","v4","uuidv4","BrowserRouter","Route","Tasks","AddTask","TaskInfo","Header","App","tasks","setTasks","id","title","completed","handleTaskClick","taskId","newTasks","map","task","handleTaskAddition","taskTitle","handTaskDelet","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,SAASC,aAAT,EAAwBC,KAAxB,QAAqC,kBAArC;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,CACjC;AACEY,IAAAA,EAAE,EAAE,GADN;AAEAC,IAAAA,KAAK,EAAE,QAFP;AAGAC,IAAAA,SAAS,EAAE;AAHX,GADiC,EAMjC;AACEF,IAAAA,EAAE,EAAE,GADN;AAEEC,IAAAA,KAAK,EAAE,QAFT;AAGEC,IAAAA,SAAS,EAAE;AAHb,GANiC,CAAD,CAAlC;;AAcC,QAAMC,eAAe,GAAEC,MAAD,IAAU;AAC9B,UAAMC,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAS;AAClC,UAAGA,IAAI,CAACP,EAAL,IAAWI,MAAd,EAAsB,OAAO,EAAE,GAAGG,IAAL;AAAWL,QAAAA,SAAS,EAAE,CAACK,IAAI,CAACL;AAA5B,OAAP;AAEtB,aAAOK,IAAP;AACD,KAJgB,CAAjB;AAMAR,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GARD;;AAUD,QAAMG,kBAAkB,GAAIC,SAAD,IAAa;AACtC,UAAMJ,QAAQ,GAAG,CAAC,GAAIP,KAAL,EAAY;AAC3BG,MAAAA,KAAK,EAAEQ,SADoB;AAE3BT,MAAAA,EAAE,EAAEV,MAAM,EAFiB;AAG3BY,MAAAA,SAAS,EAAE;AAHgB,KAAZ,CAAjB;AAMCH,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACF,GARD;;AAUA,QAAMK,aAAa,GAAIN,MAAD,IAAU;AAC9B,UAAMC,QAAQ,GAAGP,KAAK,CAACa,MAAN,CAAaJ,IAAI,IAAEA,IAAI,CAACP,EAAL,IAAWI,MAA9B,CAAjB;AACAL,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACD,GAHD;;AAKA,sBACO,QAAC,aAAD;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACC,QAAA,IAAI,EAAC,GADN;AAEE,QAAA,KAAK,MAFP;AAGG,QAAA,MAAM,EAAE,mBACS;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,kBAAkB,EAAIG;AAA/B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AACA,YAAA,KAAK,EAAEV,KADP;AAEA,YAAA,eAAe,EAAEK,eAFjB;AAGA,YAAA,aAAa,EAAEO;AAHf;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJpB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,aAAZ;AAA0B,MAAA,KAAK,MAA/B;AAAgC,MAAA,SAAS,EAAEf;AAA3C;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADP;AA0BA,CAlED;;GAAME,G;;KAAAA,G;AAoEN,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport {v4 as uuidv4} from 'uuid'\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport './App.css';\nimport Tasks from \"./Components/Tasks\";\nimport AddTask from \"./Components/AddTask\";\nimport TaskInfo from \"./Components/TaskInfo\";\nimport Header from \"./Components/Header\";\n\n\nconst App = () => {\n const [tasks, setTasks] = useState([\n   {\n     id: \"1\",\n   title: \"Item 1\",\n   completed: false,\n   },\n   {\n     id: \"2\",\n     title: \"Item 2\",\n     completed: true,\n   },\n   \n ]);\n\n  const handleTaskClick=(taskId)=>{\n    const newTasks = tasks.map((task) =>{\n      if(task.id == taskId) return { ...task, completed: !task.completed }\n\n      return task;\n    });\n\n    setTasks(newTasks)\n  };\n\n const handleTaskAddition = (taskTitle)=>{\n   const newTasks = [... tasks, {\n     title: taskTitle,\n     id: uuidv4(),\n     completed: false,\n   },\n  ];\n    setTasks(newTasks);\n };\n\n const handTaskDelet = (taskId)=>{\n   const newTasks = tasks.filter(task=>task.id != taskId)\n   setTasks(newTasks);\n };\n\n return (\n        <BrowserRouter>\n          <div className=\"container\">\n            <Header />\n            <Route\n             path=\"/\" \n              exact\n               render={() => (\n                                <div>\n                                  <AddTask handleTaskAddition = {handleTaskAddition}/>\n                                  <Tasks\n                                  tasks={tasks}\n                                  handleTaskClick={handleTaskClick}\n                                  handTaskDelet={handTaskDelet}\n                                  />\n                                </div>\n\n                               )}\n              />\n            \n          </div>\n          <Route path=\"/:taskTitle\" exact component={TaskInfo}/>\n        </BrowserRouter>\n       \n  );\n  \n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}